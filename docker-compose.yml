version: '3.8'

services:
  # Alioth Backend Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/alioth
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - SWAGGER_ENABLED=true
    depends_on:
      - mongo
      - redis
    networks:
      - alioth-network
    restart: unless-stopped

  # MongoDB Database
  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: alioth
    volumes:
      - mongo_data:/data/db
    networks:
      - alioth-network

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - alioth-network

  # MongoDB Admin Interface (optional)
  mongo-express:
    image: mongo-express:latest
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://root:password@mongo:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongo
    networks:
      - alioth-network

volumes:
  mongo_data:
  redis_data:

networks:
  alioth-network:
    driver: bridge
